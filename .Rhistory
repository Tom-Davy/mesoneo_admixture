mbpeaks=NULL
for (x in 1:nrow(topoutliers)){
print(nrow(topoutliers)-x)
#ypoints<-as.vector(unlist(mbpeaks$pval))
#xpoints<-as.vector(unlist(mbpeaks$smoluid))
row.namesstore<-topoutliers[x,]$row.names
markerstore<-topoutliers[x,]$marker
mbpeaks<-df_smol[which(df_smol$row.names==row.namesstore & df_smol$GVsmol >= outlier_threshold & df_smol$marker>=(markerstore-500000) & df_smol$marker <= (markerstore+500000)),]
ypoints<-as.vector(unlist(mbpeaks$GVsmol))
xpoints<-as.vector(unlist(mbpeaks$markerprox))
#if(is.na(topoutliers[x,]$locus)){
#points(x=xpoints,y=ypoints, pch=4, col="red")}
coli<-x
if(coli%%15 == 0){
coli<-coli+1
}
points(x = xpoints, y = ypoints, pty=20, cex=0.7, pch = 16, col = "blue")
#points(x = xpoints, y = ypoints, col=colfunc(15)[coli%%15], pty=20, cex=0.7)
}
#topoutlierG$datawg.sliding<-df_smol[topoutlierG$smolluid,]$datawg.sliding
#df$slidingorder = findInterval(df$slidingwindowdist, sort(df$slidingwindowdist))
#df$slidingwindowdistlog<-log10(df$slidingwindowdist)
#df$slidingorderlog = findInterval(df$slidingwindowdistlog, sort(df$slidingwindowdistlog))
#pal = colorRampPalette(c("blue", "red"))
points(df_smol$markerprox,genomic_values[which(genomic_values > plot_filter)],col="grey",cex=as.numeric(is.odd(as.numeric(df_smol$row.names))), pch = 20)
points(df_smol$markerprox,genomic_values[which(genomic_values > plot_filter)],col="goldenrod2",cex=as.numeric(is.even(as.numeric(df_smol$row.names))), pch = 20)
#points(df_smol$markerprox,genomic_values[which(genomic_values > plot_filter)],col=df_filt$Col)
#legend("topright", col=pal(2), pch=19,legend=c(round(range(df$slidingorderlog10), 1)))
#### Add Axes ------
### Add Gene Names ----
if(max(genomic_values)>=plot_filter){
coli<-0
for (unigene in unique(topoutliers[,3]))
{
{
toGuid<-which(topoutliers[,3]==unigene)
tophits<-topoutliers[toGuid,]
topgene<-unigene
toppval<-tophits[which.max(tophits$pval),]$pval
locus<-tophits[which.max(tophits$pval),]$markerprox
coli<-coli+1
if(coli%%15 == 0){
coli<-coli+1
}
### COL
text(x=locus, y=(toppval), labels = as.character(topgene), cex=0.6, pos = 3)
}
}}
## Finish Manhattan -----
row.namesindex=NULL
for (x in 1:22){
row.namesindex[x]<-tail(df_smol[(which(df_smol$row.names==x)),]$markerprox, 1)
}
row.namesindex2<-append(0, row.namesindex)
row.namesmidpoint<-row.namesindex2[-length(row.namesindex2)] + diff(row.namesindex2)/2
axis(1, at = row.namesmidpoint, labels=c(1:22), tick = FALSE, cex.axis=0.8)
axis(1, at = row.namesmidpoint, labels = FALSE, tick = TRUE)
axis(2, at=seq(from = 0, to = 60, by = 5))
title(xlab = "Chromosome", ylab = "P-value (-log10)", cex.main=0.8)
title(main="F_adm, V50, snp = 51")
#legend(x="topleft",legend=c(paste("0.05 Bonferroni Correction, n = ", nrow(df_filt)),"5e-8"), col = c("blue","red"), lty=2, cex =0.6)
dev.off()
getwd()
max(datapvalG)
rm(list=ls())
library(data.table)
library(RColorBrewer)
library(plotrix)
options(scipen = 999)
source("~/EvoFunc/code/functionsSelSweep.R")
poschr<-fread("/Users/davyt/EvoFunc/local_ancestry/store/chrpos.allchr.txt")
#etwd("/Users/davyt/slurmp/")
#setwd("/Users/davyt/slurmp/newpanel2_HMM/")
#setwd("/Users/davyt/slurmp/newpanel2_HMM/whg")
#setwd("/Users/davyt/slurmp/newpanel2_HMM/ehg")
setwd("/Users/davyt/slurmp/rebuttal/redo/hmm/")
HG.ancestry<-fread("HG.means.txt")
NEO.ancestry<-fread("NEO.means.txt")
HET.ancestry<-fread("HET.means.txt")
LAdf<-cbind(poschr,HG.ancestry,HET.ancestry,NEO.ancestry)
colnames(LAdf)<-c("V1","V2","HG.ancestry","HET.ancestry","NEO.ancestry")
setwd("~/EvoFunc/ms_scripts")
rm(HG,NEO,HET,HG.ancestry,NEO.ancestry,HET.ancestry)
LAdf$HGall<-LAdf$HG.ancestry+(LAdf$HET.ancestry/2)
HGsd=sd(LAdf$HGall)
HGnsd=sd(LAdf$HG.ancestry)
LAdf$HGallZ<-(LAdf$HGall-mean(LAdf$HGall))/HGsd
LAdf$HGZ<-(LAdf$HG.ancestry-mean(LAdf$HG.ancestry))/HGnsd
LAdf$HGZcomp<-(LAdf$HGallZ - LAdf$HGZ)
### Null approach for Z scores ####
LAdf$row.names=LAdf$V1
LAdf$marker=LAdf$V2
LAdf<-as.data.frame(LAdf)
nullwind=5000000
nullsnps<-windowsampler(nullwind=5000000, LAdf, 22, 1)
null=LAdf[nullsnps,]
nullsd=sd(null$HGall)
null$HGallZ<-(null$HGall-mean(null$HGall))/nullsd
#plot(null$HGallZ)
LAdf$nullZ<-(LAdf$HGall - mean(null$HGall))/nullsd
#plot(LAdf$nullZ)
df_FUT<-LAdf[which(LAdf$row.names==19 & LAdf$marker > 49199228 & LAdf$marker < 49209208),]
df_HERC2<-LAdf[which(LAdf$row.names==2 & LAdf$marker > 197058796 & LAdf$marker < 197458278),]
mean(df_HERC2$nullZ)
mean(df_HERC2$HGall)
plot(df_FUT$HGall, x=df_FUT$marker)
abline(v=49206674)
abline(h=mean(LAdf$HGall), lty=2)
iain.df<-cbind(LAdf$V1, LAdf$V2, LAdf$HGall, LAdf$nullZ)
colnames(iain.df)<-c("chr","pos","HGanc","nullZ")
#write.table(x=iain.df, file="Zscores_iain_newpanel3_nullZ.tsv", quote=F, sep = "\t")
delimit_MHC<-LAdf[which(LAdf$V1==6 & LAdf$V2 > 28477797 & LAdf$V2 < 33448354),]
delimit_classII<-delimit_MHC[delimit_MHC$V2 > 32000000,]
plot(delimit_classII$V2, y=delimit_classII$nullZ)
outlier_z<-3.5
#layout(matrix(c(1, 1, 1, 1, 1, 2, 2), nrow=1, byrow=TRUE), heights = c(1))
df_filt_markerprox<-as.data.frame(LAdf)
df_filt_markerprox$marker<-df_filt_markerprox$V2
df_filt_markerprox$row.names<-df_filt_markerprox$V1
SPACER=100000
for(CHR in 1:21){
df_current<-which(df_filt_markerprox$row.names == CHR)
df_succ<-which(df_filt_markerprox$row.names == CHR+1)
current_position<-max(df_filt_markerprox[df_current,]$marker)
print(current_position)
df_filt_markerprox[df_succ,]$marker <- df_filt_markerprox[df_succ,]$marker + SPACER + current_position
}
df_filt_markerprox$markerprox<-df_filt_markerprox$marker
df_filt_markerprox$marker<-df_filt_markerprox$V2
LAcol_grey2<-LAcol(9)
LAcol_grey2[4]<-LAcol_grey2[5]
LAcol_grey2[6]<-LAcol_grey2[5]
glist<-read.table("~/EvoFunc/glist.txt")
glist0<-glist
HG_outliers<-return_outliers(df = df_filt_markerprox, genomic_values = (1* df_filt_markerprox$nullZ), bed = glist0, outlier_threshold = 3, plot_filter=1)
#HG_outliers<-HG_outliers[which(HG_outliers$gene=="HLA-E"),]
NEO_outliers<-return_outliers(df = df_filt_markerprox, genomic_values = (-1* df_filt_markerprox$nullZ), bed = glist0, outlier_threshold = 3, plot_filter=1)
NEO_outliers=NEO_outliers[c(5,10),]
tiff(filename="davyetal2022_fig2A.tiff", res = 150, units="in", width = 14, height = 7, compression="lzw")
LAcol<-colorRampPalette(colors = c('#e40959','grey','#412ca8'))
#layout(matrix(c(1,1,1,1,2), nrow=1, byrow=TRUE), heights = c(1))
df_filt_markerprox_pos<-df_filt_markerprox[which(df_filt_markerprox$nullZ >= 0),]
plot(x=df_filt_markerprox_pos$markerprox, y=df_filt_markerprox_pos$HGall, ylim=c(0.0,0.6), type='p', axes=F, ylab="Mesolithic Ancestry (%)", xlab="Chromosome", col=(LAcol_grey2[(floor((df_filt_markerprox_pos$nullZ))+5)]), pch=20, main = " Local ancestry in the admixed middle-Neolithic", xlim=c(0,max(df_filt_markerprox$markerprox)))
df_filt_markerprox_neg<-df_filt_markerprox[which(df_filt_markerprox$nullZ < 0),]
points(x=df_filt_markerprox_neg$markerprox, y=df_filt_markerprox_neg$HGall, pch=20, col=(LAcol_grey2[(ceiling((df_filt_markerprox_neg$nullZ))+5)]))
box()
axis(2)
chrindex=NULL
for (x in 1:22){
chrindexT<-tail(df_filt_markerprox[(which(df_filt_markerprox$row.names==x)),]$markerprox, 1)
chrindexH<-head(df_filt_markerprox[(which   (df_filt_markerprox$row.names==x)),]$markerprox, 1)
chrindex[x]<-(chrindexH+chrindexT)/2
}
chrmidpoint<-chrindex
axis(1, at = chrmidpoint, labels=c(1:22), tick = TRUE, cex.axis=1)
axis(3, at = NULL, labels = FALSE, tick = FALSE)
axis(4, at = NULL, labels = FALSE, tick = FALSE)
HG_outliers<-return_outliers(df = df_filt_markerprox, genomic_values = (1* df_filt_markerprox$nullZ), bed = glist0, outlier_threshold = 3.5, plot_filter=1)
#HG_outliers<-HG_outliers[which(HG_outliers$gene=="HLA-E"),]
# manual edit to remove clipping names ]
#HG_outliers<-HG_outliers[-11,]
topoutliers<-HG_outliers
topoutliers<-HG_outliers
alloutliers<-rbind(HG_outliers, NEO_outliers)
#write.table(alloutliers, file="localancestry_z3outliers.txt",sep="\t", quote = F)
topoutliers<-HG_outliers
topoutliers_store=NULL
for (x in 1:length(unique(topoutliers$gene))){
GENE<-unique(topoutliers$gene)[x]
store<-topoutliers[topoutliers$gene==GENE,]
maxpval<-store[which(store$pval == max(store$pval)),]
topoutliers_store[[x]]<-maxpval
}
topoutliers_unique<-do.call(rbind, topoutliers_store)
df_smol<-df_filt_markerprox
for (x in 1:nrow(topoutliers_unique)){
print(nrow(topoutliers_unique)-x)
#ypoints<-as.vector(unlist(mbpeaks$pval))
#xpoints<-as.vector(unlist(mbpeaks$smoluid))
chrstore<-topoutliers_unique[x,]$chr
markerstore<-topoutliers_unique[x,]$markerprox
#mbpeaks<-df_smol[which(df_smol$row.names==chrstore  & df_smol$marker>=(markerstore-500000) & df_smol$marker <= (markerstore+500000)),]
xpoints<-topoutliers_unique[x,]$markerprox
ypoints<-df_filt_markerprox[topoutliers_unique[x,]$uid,]$HGall
#points(x=xpoints,y=ypoints, pch=4, col="red")}
coli<-x
if(coli%%15 == 0){
coli<-coli+1
}
#if(x == 4){
#  text(x = xpoints-250000000, y = ypoints+0.03, cex=0.7, col = "black", labels = topoutliers_unique[x,]$gene)
#}else{
# points(x = xpoints, y = ypoints+0.03, pty=20, cex=0.7, pch = 16, col = "green")
text(x = xpoints, y = ypoints+0.015, cex=1, col = "black", labels = topoutliers_unique[x,]$gene) }
#points(x = xpoints, y = ypoints, col=colfunc(15)[coli%%15], pty=20, cex=0.7)
#}
## NEO genes
NEO_outliers<-return_outliers(df = df_filt_markerprox, genomic_values = (-1* df_filt_markerprox$nullZ), bed = glist0, outlier_threshold = 3, plot_filter=1)
#NEO_outliers=NEO_outliers[c(5,10),]
topoutliers<-NEO_outliers
topoutliers_store=NULL
for (x in 1:length(unique(topoutliers$gene))){
GENE<-unique(topoutliers$gene)[x]
store<-topoutliers[topoutliers$gene==GENE,]
maxpval<-store[which(store$pval == max(store$pval)),]
topoutliers_store[[x]]<-maxpval
}
topoutliers_unique<-do.call(rbind, topoutliers_store)
df_smol<-df_filt_markerprox
for (x in 1:nrow(topoutliers_unique)){
print(nrow(topoutliers_unique)-x)
#ypoints<-as.vector(unlist(mbpeaks$pval))
#xpoints<-as.vector(unlist(mbpeaks$smoluid))
chrstore<-topoutliers_unique[x,]$chr
markerstore<-topoutliers_unique[x,]$markerprox
#mbpeaks<-df_smol[which(df_smol$row.names==chrstore  & df_smol$marker>=(markerstore-500000) & df_smol$marker <= (markerstore+500000)),]
xpoints<-topoutliers_unique[x,]$markerprox
ypoints<-df_filt_markerprox[topoutliers_unique[x,]$uid,]$HGall
#points(x=xpoints,y=ypoints, pch=4, col="red")}
coli<-x
if(coli%%15 == 0){
coli<-coli+1
}
#points(x = xpoints, y = ypoints-0.045, pty=20, cex=0.7, pch = 16, col = "green")
text(x = xpoints, y = ypoints-0.015, cex=1, col = "black", labels = topoutliers_unique[x,]$gene)
#points(x = xpoints, y = ypoints, col=colfunc(15)[coli%%15], pty=20, cex=0.7)
}
xmax=max(df_filt_markerprox$markerprox)
ymax=0.65
color.legend(
xl=xmax-0.9*xmax,
xr=xmax-0.5*xmax,
yb = ymax - 0.97*ymax,
yt = ymax - 0.87*ymax, gradient = "x" ,
legend = seq(from= -4, to = 4, by=1),
align = "rb",
rect.col = LAcol_grey2, cex = 0.85)
text(x=((xmax-0.9*xmax)+(xmax-0.5*xmax))/2, y=(ymax - 0.97*ymax + ymax - 0.87*ymax )/2, labels = "Z-score")
dev.off()
###### end plot #
###
tiff(filename="nogene_33rebut_redo_z3_spacer_bnohist_np4_localancestry_newpanel4_wholegenome_nullzHG3p5NEO3_grey2_rep_namefix.tiff", res = 150, units="in", width = 14, height = 7, compression="lzw")
LAcol<-colorRampPalette(colors = c('#e40959','grey','#412ca8'))
#layout(matrix(c(1,1,1,1,2), nrow=1, byrow=TRUE), heights = c(1))
df_filt_markerprox_pos<-df_filt_markerprox[which(df_filt_markerprox$nullZ >= 0),]
plot(x=df_filt_markerprox_pos$markerprox, y=df_filt_markerprox_pos$HGall, ylim=c(0.0,0.6), type='p', axes=F, ylab="Mesolithic Ancestry (%)", xlab="Chromosome", col=(LAcol_grey2[(floor((df_filt_markerprox_pos$nullZ))+5)]), pch=20, main = " Local ancestry in the admixed middle-Neolithic", xlim=c(0,max(df_filt_markerprox$markerprox)))
df_filt_markerprox_neg<-df_filt_markerprox[which(df_filt_markerprox$nullZ < 0),]
points(x=df_filt_markerprox_neg$markerprox, y=df_filt_markerprox_neg$HGall, pch=20, col=(LAcol_grey2[(ceiling((df_filt_markerprox_neg$nullZ))+5)]))
box()
axis(2)
chrindex=NULL
for (x in 1:22){
chrindexT<-tail(df_filt_markerprox[(which(df_filt_markerprox$row.names==x)),]$markerprox, 1)
chrindexH<-head(df_filt_markerprox[(which   (df_filt_markerprox$row.names==x)),]$markerprox, 1)
chrindex[x]<-(chrindexH+chrindexT)/2
}
chrmidpoint<-chrindex
axis(1, at = chrmidpoint, labels=c(1:22), tick = TRUE, cex.axis=1)
axis(3, at = NULL, labels = FALSE, tick = FALSE)
axis(4, at = NULL, labels = FALSE, tick = FALSE)
HG_outliers<-return_outliers(df = df_filt_markerprox, genomic_values = (1* df_filt_markerprox$nullZ), bed = glist0, outlier_threshold = 3, plot_filter=1)
HG_outliers<-NULL
# manual edit to remove clipping names ]
#HG_outliers<-HG_outliers[-11,]
topoutliers<-HG_outliers
topoutliers<-HG_outliers
alloutliers<-rbind(HG_outliers, NEO_outliers)
#write.table(alloutliers, file="localancestry_z3outliers.txt",sep="\t", quote = F)
topoutliers<-HG_outliers
topoutliers_store=NULL
for (x in 1:length(unique(topoutliers$gene))){
GENE<-unique(topoutliers$gene)[x]
store<-topoutliers[topoutliers$gene==GENE,]
maxpval<-store[which(store$pval == max(store$pval)),]
topoutliers_store[[x]]<-maxpval
}
topoutliers_unique<-do.call(rbind, topoutliers_store)
df_smol<-df_filt_markerprox
for (x in 1:nrow(topoutliers_unique)){
print(nrow(topoutliers_unique)-x)
#ypoints<-as.vector(unlist(mbpeaks$pval))
#xpoints<-as.vector(unlist(mbpeaks$smoluid))
chrstore<-topoutliers_unique[x,]$chr
markerstore<-topoutliers_unique[x,]$markerprox
#mbpeaks<-df_smol[which(df_smol$row.names==chrstore  & df_smol$marker>=(markerstore-500000) & df_smol$marker <= (markerstore+500000)),]
xpoints<-topoutliers_unique[x,]$markerprox
ypoints<-df_filt_markerprox[topoutliers_unique[x,]$uid,]$HGall
#points(x=xpoints,y=ypoints, pch=4, col="red")}
coli<-x
if(coli%%15 == 0){
coli<-coli+1
}
#if(x == 4){
#  text(x = xpoints-250000000, y = ypoints+0.03, cex=0.7, col = "black", labels = topoutliers_unique[x,]$gene)
#}else{
# points(x = xpoints, y = ypoints+0.03, pty=20, cex=0.7, pch = 16, col = "green")
if(topoutliers_unique[x,]$gene == "DNM1L"){
text(x = xpoints, y = ypoints+0.03, cex=1, col = "black", labels = topoutliers_unique[x,]$gene)
} else
if(topoutliers_unique[x,]$gene == "HECW2"){
text(x = xpoints-75000000, y = ypoints+0.025, cex=1, col = "black", labels = topoutliers_unique[x,]$gene)
} else {
text(x = xpoints, y = ypoints+0.015, cex=1, col = "black", labels = topoutliers_unique[x,]$gene) }
#points(x = xpoints, y = ypoints, col=colfunc(15)[coli%%15], pty=20, cex=0.7)
}
#}
## NEO genes
NEO_outliers<-return_outliers(df = df_filt_markerprox, genomic_values = (-1* df_filt_markerprox$nullZ), bed = glist0, outlier_threshold = 3, plot_filter=1)
#NEO_outliers=NEO_outliers[c(5,10),]
topoutliers<-NULL
topoutliers_store=NULL
for (x in 1:length(unique(topoutliers$gene))){
GENE<-unique(topoutliers$gene)[x]
store<-topoutliers[topoutliers$gene==GENE,]
maxpval<-store[which(store$pval == max(store$pval)),]
topoutliers_store[[x]]<-maxpval
}
topoutliers_unique<-do.call(rbind, topoutliers_store)
df_smol<-df_filt_markerprox
for (x in 1:nrow(topoutliers_unique)){
print(nrow(topoutliers_unique)-x)
#ypoints<-as.vector(unlist(mbpeaks$pval))
#xpoints<-as.vector(unlist(mbpeaks$smoluid))
chrstore<-topoutliers_unique[x,]$chr
markerstore<-topoutliers_unique[x,]$markerprox
#mbpeaks<-df_smol[which(df_smol$row.names==chrstore  & df_smol$marker>=(markerstore-500000) & df_smol$marker <= (markerstore+500000)),]
xpoints<-topoutliers_unique[x,]$markerprox
ypoints<-df_filt_markerprox[topoutliers_unique[x,]$uid,]$HGall
#points(x=xpoints,y=ypoints, pch=4, col="red")}
coli<-x
if(coli%%15 == 0){
coli<-coli+1
}
#points(x = xpoints, y = ypoints-0.045, pty=20, cex=0.7, pch = 16, col = "green")
text(x = xpoints, y = ypoints-0.015, cex=1, col = "black", labels = topoutliers_unique[x,]$gene)
#points(x = xpoints, y = ypoints, col=colfunc(15)[coli%%15], pty=20, cex=0.7)
}
xmax=max(df_filt_markerprox$markerprox)
ymax=0.65
color.legend(
xl=xmax-0.9*xmax,
xr=xmax-0.5*xmax,
yb = ymax - 0.97*ymax,
yt = ymax - 0.87*ymax, gradient = "x" ,
legend = seq(from= -4, to = 4, by=1),
align = "rb",
rect.col = LAcol_grey2, cex = 0.85)
text(x=((xmax-0.9*xmax)+(xmax-0.5*xmax))/2, y=(ymax - 0.97*ymax + ymax - 0.87*ymax )/2, labels = "Z-score")
dev.off()
rm(list=ls())
library(data.table)
library(RColorBrewer)
library(plotrix)
options(scipen = 999)
source("~/EvoFunc/code/functionsSelSweep.R")
poschr<-fread("/Users/davyt/EvoFunc/local_ancestry/store/chrpos.allchr.txt")
#etwd("/Users/davyt/slurmp/")
#setwd("/Users/davyt/slurmp/newpanel2_HMM/")
#setwd("/Users/davyt/slurmp/newpanel2_HMM/whg")
#setwd("/Users/davyt/slurmp/newpanel2_HMM/ehg")
setwd("/Users/davyt/slurmp/rebuttal/redo/hmm/")
HG.ancestry<-fread("HG.means.txt")
NEO.ancestry<-fread("NEO.means.txt")
HET.ancestry<-fread("HET.means.txt")
LAdf<-cbind(poschr,HG.ancestry,HET.ancestry,NEO.ancestry)
colnames(LAdf)<-c("V1","V2","HG.ancestry","HET.ancestry","NEO.ancestry")
setwd("~/EvoFunc/ms_scripts")
rm(HG,NEO,HET,HG.ancestry,NEO.ancestry,HET.ancestry)
LAdf$HGall<-LAdf$HG.ancestry+(LAdf$HET.ancestry/2)
HGsd=sd(LAdf$HGall)
HGnsd=sd(LAdf$HG.ancestry)
LAdf$HGallZ<-(LAdf$HGall-mean(LAdf$HGall))/HGsd
LAdf$HGZ<-(LAdf$HG.ancestry-mean(LAdf$HG.ancestry))/HGnsd
LAdf$HGZcomp<-(LAdf$HGallZ - LAdf$HGZ)
### Null approach for Z scores ####
LAdf$row.names=LAdf$V1
LAdf$marker=LAdf$V2
LAdf<-as.data.frame(LAdf)
nullwind=5000000
nullsnps<-windowsampler(nullwind=5000000, LAdf, 22, 1)
null=LAdf[nullsnps,]
nullsd=sd(null$HGall)
null$HGallZ<-(null$HGall-mean(null$HGall))/nullsd
LAdf$nullZ<-(LAdf$HGall - mean(null$HGall))/nullsd
df_FUT<-LAdf[which(LAdf$row.names==19 & LAdf$marker > 49199228 & LAdf$marker < 49209208),]
df_HERC2<-LAdf[which(LAdf$row.names==2 & LAdf$marker > 197058796 & LAdf$marker < 197458278),]
mean(df_HERC2$nullZ)
mean(df_HERC2$HGall)
plot(df_FUT$HGall, x=df_FUT$marker)
abline(v=49206674)
abline(h=mean(LAdf$HGall), lty=2)
delimit_MHC<-LAdf[which(LAdf$V1==6 & LAdf$V2 > 28477797 & LAdf$V2 < 33448354),]
delimit_classII<-delimit_MHC[delimit_MHC$V2 > 32000000,]
plot(delimit_classII$V2, y=delimit_classII$nullZ)
outlier_z<-3.5
#layout(matrix(c(1, 1, 1, 1, 1, 2, 2), nrow=1, byrow=TRUE), heights = c(1))
df_filt_markerprox<-as.data.frame(LAdf)
df_filt_markerprox$marker<-df_filt_markerprox$V2
df_filt_markerprox$row.names<-df_filt_markerprox$V1
SPACER=100000
for(CHR in 1:21){
df_current<-which(df_filt_markerprox$row.names == CHR)
df_succ<-which(df_filt_markerprox$row.names == CHR+1)
current_position<-max(df_filt_markerprox[df_current,]$marker)
print(current_position)
df_filt_markerprox[df_succ,]$marker <- df_filt_markerprox[df_succ,]$marker + SPACER + current_position
}
df_filt_markerprox$markerprox<-df_filt_markerprox$marker
df_filt_markerprox$marker<-df_filt_markerprox$V2
LAcol_grey2<-LAcol(9)
LAcol_grey2[4]<-LAcol_grey2[5]
LAcol<-colorRampPalette(colors = c('#e40959','grey','#412ca8'))
LAcol_grey2<-LAcol(9)
LAcol_grey2[4]<-LAcol_grey2[5]
LAcol_grey2[6]<-LAcol_grey2[5]
glist<-read.table("~/EvoFunc/glist.txt")
glist0<-glist
HG_outliers<-return_outliers(df = df_filt_markerprox, genomic_values = (1* df_filt_markerprox$nullZ), bed = glist0, outlier_threshold = 3, plot_filter=1)
NEO_outliers<-return_outliers(df = df_filt_markerprox, genomic_values = (-1* df_filt_markerprox$nullZ), bed = glist0, outlier_threshold = 3, plot_filter=1)
NEO_outliers=NEO_outliers[c(5,10),]
tiff(filename="davyetal2022_fig2A.tiff", res = 150, units="in", width = 14, height = 7, compression="lzw")
LAcol<-colorRampPalette(colors = c('#e40959','grey','#412ca8'))
df_filt_markerprox_pos<-df_filt_markerprox[which(df_filt_markerprox$nullZ >= 0),]
plot(x=df_filt_markerprox_pos$markerprox, y=df_filt_markerprox_pos$HGall, ylim=c(0.0,0.6), type='p', axes=F, ylab="Mesolithic Ancestry (%)", xlab="Chromosome", col=(LAcol_grey2[(floor((df_filt_markerprox_pos$nullZ))+5)]), pch=20, main = " Local ancestry in the admixed middle-Neolithic", xlim=c(0,max(df_filt_markerprox$markerprox)))
df_filt_markerprox_neg<-df_filt_markerprox[which(df_filt_markerprox$nullZ < 0),]
points(x=df_filt_markerprox_neg$markerprox, y=df_filt_markerprox_neg$HGall, pch=20, col=(LAcol_grey2[(ceiling((df_filt_markerprox_neg$nullZ))+5)]))
box()
axis(2)
chrindex=NULL
for (x in 1:22){
chrindexT<-tail(df_filt_markerprox[(which(df_filt_markerprox$row.names==x)),]$markerprox, 1)
chrindexH<-head(df_filt_markerprox[(which   (df_filt_markerprox$row.names==x)),]$markerprox, 1)
chrindex[x]<-(chrindexH+chrindexT)/2
}
chrmidpoint<-chrindex
axis(1, at = chrmidpoint, labels=c(1:22), tick = TRUE, cex.axis=1)
axis(3, at = NULL, labels = FALSE, tick = FALSE)
axis(4, at = NULL, labels = FALSE, tick = FALSE)
HG_outliers<-return_outliers(df = df_filt_markerprox, genomic_values = (1* df_filt_markerprox$nullZ), bed = glist0, outlier_threshold = 3.5, plot_filter=1)
topoutliers<-HG_outliers
topoutliers<-HG_outliers
alloutliers<-rbind(HG_outliers, NEO_outliers)
topoutliers<-HG_outliers
topoutliers_store=NULL
for (x in 1:length(unique(topoutliers$gene))){
GENE<-unique(topoutliers$gene)[x]
store<-topoutliers[topoutliers$gene==GENE,]
maxpval<-store[which(store$pval == max(store$pval)),]
topoutliers_store[[x]]<-maxpval
}
topoutliers_unique<-do.call(rbind, topoutliers_store)
df_smol<-df_filt_markerprox
for (x in 1:nrow(topoutliers_unique)){
print(nrow(topoutliers_unique)-x)
#ypoints<-as.vector(unlist(mbpeaks$pval))
#xpoints<-as.vector(unlist(mbpeaks$smoluid))
chrstore<-topoutliers_unique[x,]$chr
markerstore<-topoutliers_unique[x,]$markerprox
#mbpeaks<-df_smol[which(df_smol$row.names==chrstore  & df_smol$marker>=(markerstore-500000) & df_smol$marker <= (markerstore+500000)),]
xpoints<-topoutliers_unique[x,]$markerprox
ypoints<-df_filt_markerprox[topoutliers_unique[x,]$uid,]$HGall
#points(x=xpoints,y=ypoints, pch=4, col="red")}
coli<-x
if(coli%%15 == 0){
coli<-coli+1
}
#if(x == 4){
#  text(x = xpoints-250000000, y = ypoints+0.03, cex=0.7, col = "black", labels = topoutliers_unique[x,]$gene)
#}else{
# points(x = xpoints, y = ypoints+0.03, pty=20, cex=0.7, pch = 16, col = "green")
text(x = xpoints, y = ypoints+0.015, cex=1, col = "black", labels = topoutliers_unique[x,]$gene) }
NEO_outliers<-return_outliers(df = df_filt_markerprox, genomic_values = (-1* df_filt_markerprox$nullZ), bed = glist0, outlier_threshold = 3, plot_filter=1)
topoutliers<-NEO_outliers
topoutliers_store=NULL
for (x in 1:length(unique(topoutliers$gene))){
GENE<-unique(topoutliers$gene)[x]
store<-topoutliers[topoutliers$gene==GENE,]
maxpval<-store[which(store$pval == max(store$pval)),]
topoutliers_store[[x]]<-maxpval
}
topoutliers_unique<-do.call(rbind, topoutliers_store)
df_smol<-df_filt_markerprox
for (x in 1:nrow(topoutliers_unique)){
print(nrow(topoutliers_unique)-x)
#ypoints<-as.vector(unlist(mbpeaks$pval))
#xpoints<-as.vector(unlist(mbpeaks$smoluid))
chrstore<-topoutliers_unique[x,]$chr
markerstore<-topoutliers_unique[x,]$markerprox
#mbpeaks<-df_smol[which(df_smol$row.names==chrstore  & df_smol$marker>=(markerstore-500000) & df_smol$marker <= (markerstore+500000)),]
xpoints<-topoutliers_unique[x,]$markerprox
ypoints<-df_filt_markerprox[topoutliers_unique[x,]$uid,]$HGall
#points(x=xpoints,y=ypoints, pch=4, col="red")}
coli<-x
if(coli%%15 == 0){
coli<-coli+1
}
#points(x = xpoints, y = ypoints-0.045, pty=20, cex=0.7, pch = 16, col = "green")
text(x = xpoints, y = ypoints-0.015, cex=1, col = "black", labels = topoutliers_unique[x,]$gene)
#points(x = xpoints, y = ypoints, col=colfunc(15)[coli%%15], pty=20, cex=0.7)
}
xmax=max(df_filt_markerprox$markerprox)
ymax=0.65
color.legend(
xl=xmax-0.9*xmax,
xr=xmax-0.5*xmax,
yb = ymax - 0.97*ymax,
yt = ymax - 0.87*ymax, gradient = "x" ,
legend = seq(from= -4, to = 4, by=1),
align = "rb",
rect.col = LAcol_grey2, cex = 0.85)
text(x=((xmax-0.9*xmax)+(xmax-0.5*xmax))/2, y=(ymax - 0.97*ymax + ymax - 0.87*ymax )/2, labels = "Z-score")
dev.off()
